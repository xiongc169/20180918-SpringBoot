<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yoong.dist.service.core.mapper.a1902_biz.CustomerCreditExtMapper" >
  <resultMap id="BaseResultMap" type="com.yoong.dist.api.domain.a1902_biz.CustomerCreditExt" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="credit_id" property="creditId" jdbcType="BIGINT" />
    <result column="last_credit_id" property="lastCreditId" jdbcType="BIGINT" />
    <result column="external_serial_no" property="externalSerialNo" jdbcType="VARCHAR" />
    <result column="expect_loan_amount" property="expectLoanAmount" jdbcType="DECIMAL" />
    <result column="expect_extra_loan_amount" property="expectExtraLoanAmount" jdbcType="DECIMAL" />
    <result column="expect_car_trans_amount" property="expectCarTransAmount" jdbcType="DECIMAL" />
    <result column="expect_loan_term" property="expectLoanTerm" jdbcType="VARCHAR" />
    <result column="loan_purpose" property="loanPurpose" jdbcType="VARCHAR" />
    <result column="pre_check_bank_card" property="preCheckBankCard" jdbcType="INTEGER" />
    <result column="auth_result" property="authResult" jdbcType="INTEGER" />
    <result column="sign_result" property="signResult" jdbcType="INTEGER" />
    <result column="outer_sign_result" property="outerSignResult" jdbcType="INTEGER" />
    <result column="sign_finish_time" property="signFinishTime" jdbcType="TIMESTAMP" />
    <result column="fund_org_business_status" property="fundOrgBusinessStatus" jdbcType="INTEGER" />
    <result column="ocr_status" property="ocrStatus" jdbcType="INTEGER" />
    <result column="real_auth_status" property="realAuthStatus" jdbcType="INTEGER" />
    <result column="credit_result" property="creditResult" jdbcType="INTEGER" />
    <result column="credit_remark" property="creditRemark" jdbcType="VARCHAR" />
    <result column="credit_status" property="creditStatus" jdbcType="INTEGER" />
    <result column="flow_type" property="flowType" jdbcType="VARCHAR" />
    <result column="flow_node_key" property="flowNodeKey" jdbcType="VARCHAR" />
    <result column="flow_node_index" property="flowNodeIndex" jdbcType="INTEGER" />
    <result column="flow_node_name" property="flowNodeName" jdbcType="VARCHAR" />
    <result column="flow_create_time" property="flowCreateTime" jdbcType="TIMESTAMP" />
    <result column="credit_launch_time" property="creditLaunchTime" jdbcType="TIMESTAMP" />
    <result column="credit_inter_time" property="creditInterTime" jdbcType="TIMESTAMP" />
    <result column="credit_customer_sign_launch_time" property="creditCustomerSignLaunchTime" jdbcType="TIMESTAMP" />
    <result column="credit_customer_sign_finish_time" property="creditCustomerSignFinishTime" jdbcType="TIMESTAMP" />
    <result column="flow_finish_time" property="flowFinishTime" jdbcType="TIMESTAMP" />
    <result column="effective_expire_time" property="effectiveExpireTime" jdbcType="TIMESTAMP" />
    <result column="signing_authorize_link_total" property="signingAuthorizeLinkTotal" jdbcType="VARCHAR" />
    <result column="outer_signing_authorize_link_total" property="outerSigningAuthorizeLinkTotal" jdbcType="VARCHAR" />
    <result column="customer_manager_id" property="customerManagerId" jdbcType="VARCHAR" />
    <result column="yuntu_order_no" property="yuntuOrderNo" jdbcType="VARCHAR" />
    <result column="is_inuse" property="isInuse" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, credit_id, last_credit_id, external_serial_no, expect_loan_amount, expect_extra_loan_amount, 
    expect_car_trans_amount, expect_loan_term, loan_purpose, pre_check_bank_card, auth_result, 
    sign_result, outer_sign_result, sign_finish_time, fund_org_business_status, ocr_status, 
    real_auth_status, credit_result, credit_remark, credit_status, flow_type, flow_node_key, 
    flow_node_index, flow_node_name, flow_create_time, credit_launch_time, credit_inter_time, 
    credit_customer_sign_launch_time, credit_customer_sign_finish_time, flow_finish_time, 
    effective_expire_time, signing_authorize_link_total, outer_signing_authorize_link_total, 
    customer_manager_id, yuntu_order_no, is_inuse, create_time, modify_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yoong.dist.api.domain.a1902_biz.CustomerCreditExtExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer_credit_ext
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from customer_credit_ext
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from customer_credit_ext
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoong.dist.api.domain.a1902_biz.CustomerCreditExtExample" >
    delete from customer_credit_ext
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yoong.dist.api.domain.a1902_biz.CustomerCreditExt" >
    insert into customer_credit_ext (id, credit_id, last_credit_id, 
      external_serial_no, expect_loan_amount, expect_extra_loan_amount, 
      expect_car_trans_amount, expect_loan_term, loan_purpose, 
      pre_check_bank_card, auth_result, sign_result, 
      outer_sign_result, sign_finish_time, fund_org_business_status, 
      ocr_status, real_auth_status, credit_result, 
      credit_remark, credit_status, flow_type, 
      flow_node_key, flow_node_index, flow_node_name, 
      flow_create_time, credit_launch_time, credit_inter_time, 
      credit_customer_sign_launch_time, credit_customer_sign_finish_time, 
      flow_finish_time, effective_expire_time, 
      signing_authorize_link_total, outer_signing_authorize_link_total, 
      customer_manager_id, yuntu_order_no, is_inuse, 
      create_time, modify_time)
    values (#{id,jdbcType=BIGINT}, #{creditId,jdbcType=BIGINT}, #{lastCreditId,jdbcType=BIGINT}, 
      #{externalSerialNo,jdbcType=VARCHAR}, #{expectLoanAmount,jdbcType=DECIMAL}, #{expectExtraLoanAmount,jdbcType=DECIMAL}, 
      #{expectCarTransAmount,jdbcType=DECIMAL}, #{expectLoanTerm,jdbcType=VARCHAR}, #{loanPurpose,jdbcType=VARCHAR}, 
      #{preCheckBankCard,jdbcType=INTEGER}, #{authResult,jdbcType=INTEGER}, #{signResult,jdbcType=INTEGER}, 
      #{outerSignResult,jdbcType=INTEGER}, #{signFinishTime,jdbcType=TIMESTAMP}, #{fundOrgBusinessStatus,jdbcType=INTEGER}, 
      #{ocrStatus,jdbcType=INTEGER}, #{realAuthStatus,jdbcType=INTEGER}, #{creditResult,jdbcType=INTEGER}, 
      #{creditRemark,jdbcType=VARCHAR}, #{creditStatus,jdbcType=INTEGER}, #{flowType,jdbcType=VARCHAR}, 
      #{flowNodeKey,jdbcType=VARCHAR}, #{flowNodeIndex,jdbcType=INTEGER}, #{flowNodeName,jdbcType=VARCHAR}, 
      #{flowCreateTime,jdbcType=TIMESTAMP}, #{creditLaunchTime,jdbcType=TIMESTAMP}, #{creditInterTime,jdbcType=TIMESTAMP}, 
      #{creditCustomerSignLaunchTime,jdbcType=TIMESTAMP}, #{creditCustomerSignFinishTime,jdbcType=TIMESTAMP}, 
      #{flowFinishTime,jdbcType=TIMESTAMP}, #{effectiveExpireTime,jdbcType=TIMESTAMP}, 
      #{signingAuthorizeLinkTotal,jdbcType=VARCHAR}, #{outerSigningAuthorizeLinkTotal,jdbcType=VARCHAR}, 
      #{customerManagerId,jdbcType=VARCHAR}, #{yuntuOrderNo,jdbcType=VARCHAR}, #{isInuse,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yoong.dist.api.domain.a1902_biz.CustomerCreditExt" >
    insert into customer_credit_ext
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="creditId != null" >
        credit_id,
      </if>
      <if test="lastCreditId != null" >
        last_credit_id,
      </if>
      <if test="externalSerialNo != null" >
        external_serial_no,
      </if>
      <if test="expectLoanAmount != null" >
        expect_loan_amount,
      </if>
      <if test="expectExtraLoanAmount != null" >
        expect_extra_loan_amount,
      </if>
      <if test="expectCarTransAmount != null" >
        expect_car_trans_amount,
      </if>
      <if test="expectLoanTerm != null" >
        expect_loan_term,
      </if>
      <if test="loanPurpose != null" >
        loan_purpose,
      </if>
      <if test="preCheckBankCard != null" >
        pre_check_bank_card,
      </if>
      <if test="authResult != null" >
        auth_result,
      </if>
      <if test="signResult != null" >
        sign_result,
      </if>
      <if test="outerSignResult != null" >
        outer_sign_result,
      </if>
      <if test="signFinishTime != null" >
        sign_finish_time,
      </if>
      <if test="fundOrgBusinessStatus != null" >
        fund_org_business_status,
      </if>
      <if test="ocrStatus != null" >
        ocr_status,
      </if>
      <if test="realAuthStatus != null" >
        real_auth_status,
      </if>
      <if test="creditResult != null" >
        credit_result,
      </if>
      <if test="creditRemark != null" >
        credit_remark,
      </if>
      <if test="creditStatus != null" >
        credit_status,
      </if>
      <if test="flowType != null" >
        flow_type,
      </if>
      <if test="flowNodeKey != null" >
        flow_node_key,
      </if>
      <if test="flowNodeIndex != null" >
        flow_node_index,
      </if>
      <if test="flowNodeName != null" >
        flow_node_name,
      </if>
      <if test="flowCreateTime != null" >
        flow_create_time,
      </if>
      <if test="creditLaunchTime != null" >
        credit_launch_time,
      </if>
      <if test="creditInterTime != null" >
        credit_inter_time,
      </if>
      <if test="creditCustomerSignLaunchTime != null" >
        credit_customer_sign_launch_time,
      </if>
      <if test="creditCustomerSignFinishTime != null" >
        credit_customer_sign_finish_time,
      </if>
      <if test="flowFinishTime != null" >
        flow_finish_time,
      </if>
      <if test="effectiveExpireTime != null" >
        effective_expire_time,
      </if>
      <if test="signingAuthorizeLinkTotal != null" >
        signing_authorize_link_total,
      </if>
      <if test="outerSigningAuthorizeLinkTotal != null" >
        outer_signing_authorize_link_total,
      </if>
      <if test="customerManagerId != null" >
        customer_manager_id,
      </if>
      <if test="yuntuOrderNo != null" >
        yuntu_order_no,
      </if>
      <if test="isInuse != null" >
        is_inuse,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="creditId != null" >
        #{creditId,jdbcType=BIGINT},
      </if>
      <if test="lastCreditId != null" >
        #{lastCreditId,jdbcType=BIGINT},
      </if>
      <if test="externalSerialNo != null" >
        #{externalSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="expectLoanAmount != null" >
        #{expectLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="expectExtraLoanAmount != null" >
        #{expectExtraLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="expectCarTransAmount != null" >
        #{expectCarTransAmount,jdbcType=DECIMAL},
      </if>
      <if test="expectLoanTerm != null" >
        #{expectLoanTerm,jdbcType=VARCHAR},
      </if>
      <if test="loanPurpose != null" >
        #{loanPurpose,jdbcType=VARCHAR},
      </if>
      <if test="preCheckBankCard != null" >
        #{preCheckBankCard,jdbcType=INTEGER},
      </if>
      <if test="authResult != null" >
        #{authResult,jdbcType=INTEGER},
      </if>
      <if test="signResult != null" >
        #{signResult,jdbcType=INTEGER},
      </if>
      <if test="outerSignResult != null" >
        #{outerSignResult,jdbcType=INTEGER},
      </if>
      <if test="signFinishTime != null" >
        #{signFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fundOrgBusinessStatus != null" >
        #{fundOrgBusinessStatus,jdbcType=INTEGER},
      </if>
      <if test="ocrStatus != null" >
        #{ocrStatus,jdbcType=INTEGER},
      </if>
      <if test="realAuthStatus != null" >
        #{realAuthStatus,jdbcType=INTEGER},
      </if>
      <if test="creditResult != null" >
        #{creditResult,jdbcType=INTEGER},
      </if>
      <if test="creditRemark != null" >
        #{creditRemark,jdbcType=VARCHAR},
      </if>
      <if test="creditStatus != null" >
        #{creditStatus,jdbcType=INTEGER},
      </if>
      <if test="flowType != null" >
        #{flowType,jdbcType=VARCHAR},
      </if>
      <if test="flowNodeKey != null" >
        #{flowNodeKey,jdbcType=VARCHAR},
      </if>
      <if test="flowNodeIndex != null" >
        #{flowNodeIndex,jdbcType=INTEGER},
      </if>
      <if test="flowNodeName != null" >
        #{flowNodeName,jdbcType=VARCHAR},
      </if>
      <if test="flowCreateTime != null" >
        #{flowCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditLaunchTime != null" >
        #{creditLaunchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditInterTime != null" >
        #{creditInterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditCustomerSignLaunchTime != null" >
        #{creditCustomerSignLaunchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditCustomerSignFinishTime != null" >
        #{creditCustomerSignFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowFinishTime != null" >
        #{flowFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveExpireTime != null" >
        #{effectiveExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signingAuthorizeLinkTotal != null" >
        #{signingAuthorizeLinkTotal,jdbcType=VARCHAR},
      </if>
      <if test="outerSigningAuthorizeLinkTotal != null" >
        #{outerSigningAuthorizeLinkTotal,jdbcType=VARCHAR},
      </if>
      <if test="customerManagerId != null" >
        #{customerManagerId,jdbcType=VARCHAR},
      </if>
      <if test="yuntuOrderNo != null" >
        #{yuntuOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="isInuse != null" >
        #{isInuse,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yoong.dist.api.domain.a1902_biz.CustomerCreditExtExample" resultType="java.lang.Integer" >
    select count(*) from customer_credit_ext
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer_credit_ext
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.creditId != null" >
        credit_id = #{record.creditId,jdbcType=BIGINT},
      </if>
      <if test="record.lastCreditId != null" >
        last_credit_id = #{record.lastCreditId,jdbcType=BIGINT},
      </if>
      <if test="record.externalSerialNo != null" >
        external_serial_no = #{record.externalSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.expectLoanAmount != null" >
        expect_loan_amount = #{record.expectLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.expectExtraLoanAmount != null" >
        expect_extra_loan_amount = #{record.expectExtraLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.expectCarTransAmount != null" >
        expect_car_trans_amount = #{record.expectCarTransAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.expectLoanTerm != null" >
        expect_loan_term = #{record.expectLoanTerm,jdbcType=VARCHAR},
      </if>
      <if test="record.loanPurpose != null" >
        loan_purpose = #{record.loanPurpose,jdbcType=VARCHAR},
      </if>
      <if test="record.preCheckBankCard != null" >
        pre_check_bank_card = #{record.preCheckBankCard,jdbcType=INTEGER},
      </if>
      <if test="record.authResult != null" >
        auth_result = #{record.authResult,jdbcType=INTEGER},
      </if>
      <if test="record.signResult != null" >
        sign_result = #{record.signResult,jdbcType=INTEGER},
      </if>
      <if test="record.outerSignResult != null" >
        outer_sign_result = #{record.outerSignResult,jdbcType=INTEGER},
      </if>
      <if test="record.signFinishTime != null" >
        sign_finish_time = #{record.signFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fundOrgBusinessStatus != null" >
        fund_org_business_status = #{record.fundOrgBusinessStatus,jdbcType=INTEGER},
      </if>
      <if test="record.ocrStatus != null" >
        ocr_status = #{record.ocrStatus,jdbcType=INTEGER},
      </if>
      <if test="record.realAuthStatus != null" >
        real_auth_status = #{record.realAuthStatus,jdbcType=INTEGER},
      </if>
      <if test="record.creditResult != null" >
        credit_result = #{record.creditResult,jdbcType=INTEGER},
      </if>
      <if test="record.creditRemark != null" >
        credit_remark = #{record.creditRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.creditStatus != null" >
        credit_status = #{record.creditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.flowType != null" >
        flow_type = #{record.flowType,jdbcType=VARCHAR},
      </if>
      <if test="record.flowNodeKey != null" >
        flow_node_key = #{record.flowNodeKey,jdbcType=VARCHAR},
      </if>
      <if test="record.flowNodeIndex != null" >
        flow_node_index = #{record.flowNodeIndex,jdbcType=INTEGER},
      </if>
      <if test="record.flowNodeName != null" >
        flow_node_name = #{record.flowNodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.flowCreateTime != null" >
        flow_create_time = #{record.flowCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creditLaunchTime != null" >
        credit_launch_time = #{record.creditLaunchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creditInterTime != null" >
        credit_inter_time = #{record.creditInterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creditCustomerSignLaunchTime != null" >
        credit_customer_sign_launch_time = #{record.creditCustomerSignLaunchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creditCustomerSignFinishTime != null" >
        credit_customer_sign_finish_time = #{record.creditCustomerSignFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flowFinishTime != null" >
        flow_finish_time = #{record.flowFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.effectiveExpireTime != null" >
        effective_expire_time = #{record.effectiveExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signingAuthorizeLinkTotal != null" >
        signing_authorize_link_total = #{record.signingAuthorizeLinkTotal,jdbcType=VARCHAR},
      </if>
      <if test="record.outerSigningAuthorizeLinkTotal != null" >
        outer_signing_authorize_link_total = #{record.outerSigningAuthorizeLinkTotal,jdbcType=VARCHAR},
      </if>
      <if test="record.customerManagerId != null" >
        customer_manager_id = #{record.customerManagerId,jdbcType=VARCHAR},
      </if>
      <if test="record.yuntuOrderNo != null" >
        yuntu_order_no = #{record.yuntuOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.isInuse != null" >
        is_inuse = #{record.isInuse,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer_credit_ext
    set id = #{record.id,jdbcType=BIGINT},
      credit_id = #{record.creditId,jdbcType=BIGINT},
      last_credit_id = #{record.lastCreditId,jdbcType=BIGINT},
      external_serial_no = #{record.externalSerialNo,jdbcType=VARCHAR},
      expect_loan_amount = #{record.expectLoanAmount,jdbcType=DECIMAL},
      expect_extra_loan_amount = #{record.expectExtraLoanAmount,jdbcType=DECIMAL},
      expect_car_trans_amount = #{record.expectCarTransAmount,jdbcType=DECIMAL},
      expect_loan_term = #{record.expectLoanTerm,jdbcType=VARCHAR},
      loan_purpose = #{record.loanPurpose,jdbcType=VARCHAR},
      pre_check_bank_card = #{record.preCheckBankCard,jdbcType=INTEGER},
      auth_result = #{record.authResult,jdbcType=INTEGER},
      sign_result = #{record.signResult,jdbcType=INTEGER},
      outer_sign_result = #{record.outerSignResult,jdbcType=INTEGER},
      sign_finish_time = #{record.signFinishTime,jdbcType=TIMESTAMP},
      fund_org_business_status = #{record.fundOrgBusinessStatus,jdbcType=INTEGER},
      ocr_status = #{record.ocrStatus,jdbcType=INTEGER},
      real_auth_status = #{record.realAuthStatus,jdbcType=INTEGER},
      credit_result = #{record.creditResult,jdbcType=INTEGER},
      credit_remark = #{record.creditRemark,jdbcType=VARCHAR},
      credit_status = #{record.creditStatus,jdbcType=INTEGER},
      flow_type = #{record.flowType,jdbcType=VARCHAR},
      flow_node_key = #{record.flowNodeKey,jdbcType=VARCHAR},
      flow_node_index = #{record.flowNodeIndex,jdbcType=INTEGER},
      flow_node_name = #{record.flowNodeName,jdbcType=VARCHAR},
      flow_create_time = #{record.flowCreateTime,jdbcType=TIMESTAMP},
      credit_launch_time = #{record.creditLaunchTime,jdbcType=TIMESTAMP},
      credit_inter_time = #{record.creditInterTime,jdbcType=TIMESTAMP},
      credit_customer_sign_launch_time = #{record.creditCustomerSignLaunchTime,jdbcType=TIMESTAMP},
      credit_customer_sign_finish_time = #{record.creditCustomerSignFinishTime,jdbcType=TIMESTAMP},
      flow_finish_time = #{record.flowFinishTime,jdbcType=TIMESTAMP},
      effective_expire_time = #{record.effectiveExpireTime,jdbcType=TIMESTAMP},
      signing_authorize_link_total = #{record.signingAuthorizeLinkTotal,jdbcType=VARCHAR},
      outer_signing_authorize_link_total = #{record.outerSigningAuthorizeLinkTotal,jdbcType=VARCHAR},
      customer_manager_id = #{record.customerManagerId,jdbcType=VARCHAR},
      yuntu_order_no = #{record.yuntuOrderNo,jdbcType=VARCHAR},
      is_inuse = #{record.isInuse,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoong.dist.api.domain.a1902_biz.CustomerCreditExt" >
    update customer_credit_ext
    <set >
      <if test="creditId != null" >
        credit_id = #{creditId,jdbcType=BIGINT},
      </if>
      <if test="lastCreditId != null" >
        last_credit_id = #{lastCreditId,jdbcType=BIGINT},
      </if>
      <if test="externalSerialNo != null" >
        external_serial_no = #{externalSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="expectLoanAmount != null" >
        expect_loan_amount = #{expectLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="expectExtraLoanAmount != null" >
        expect_extra_loan_amount = #{expectExtraLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="expectCarTransAmount != null" >
        expect_car_trans_amount = #{expectCarTransAmount,jdbcType=DECIMAL},
      </if>
      <if test="expectLoanTerm != null" >
        expect_loan_term = #{expectLoanTerm,jdbcType=VARCHAR},
      </if>
      <if test="loanPurpose != null" >
        loan_purpose = #{loanPurpose,jdbcType=VARCHAR},
      </if>
      <if test="preCheckBankCard != null" >
        pre_check_bank_card = #{preCheckBankCard,jdbcType=INTEGER},
      </if>
      <if test="authResult != null" >
        auth_result = #{authResult,jdbcType=INTEGER},
      </if>
      <if test="signResult != null" >
        sign_result = #{signResult,jdbcType=INTEGER},
      </if>
      <if test="outerSignResult != null" >
        outer_sign_result = #{outerSignResult,jdbcType=INTEGER},
      </if>
      <if test="signFinishTime != null" >
        sign_finish_time = #{signFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fundOrgBusinessStatus != null" >
        fund_org_business_status = #{fundOrgBusinessStatus,jdbcType=INTEGER},
      </if>
      <if test="ocrStatus != null" >
        ocr_status = #{ocrStatus,jdbcType=INTEGER},
      </if>
      <if test="realAuthStatus != null" >
        real_auth_status = #{realAuthStatus,jdbcType=INTEGER},
      </if>
      <if test="creditResult != null" >
        credit_result = #{creditResult,jdbcType=INTEGER},
      </if>
      <if test="creditRemark != null" >
        credit_remark = #{creditRemark,jdbcType=VARCHAR},
      </if>
      <if test="creditStatus != null" >
        credit_status = #{creditStatus,jdbcType=INTEGER},
      </if>
      <if test="flowType != null" >
        flow_type = #{flowType,jdbcType=VARCHAR},
      </if>
      <if test="flowNodeKey != null" >
        flow_node_key = #{flowNodeKey,jdbcType=VARCHAR},
      </if>
      <if test="flowNodeIndex != null" >
        flow_node_index = #{flowNodeIndex,jdbcType=INTEGER},
      </if>
      <if test="flowNodeName != null" >
        flow_node_name = #{flowNodeName,jdbcType=VARCHAR},
      </if>
      <if test="flowCreateTime != null" >
        flow_create_time = #{flowCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditLaunchTime != null" >
        credit_launch_time = #{creditLaunchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditInterTime != null" >
        credit_inter_time = #{creditInterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditCustomerSignLaunchTime != null" >
        credit_customer_sign_launch_time = #{creditCustomerSignLaunchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditCustomerSignFinishTime != null" >
        credit_customer_sign_finish_time = #{creditCustomerSignFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowFinishTime != null" >
        flow_finish_time = #{flowFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveExpireTime != null" >
        effective_expire_time = #{effectiveExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signingAuthorizeLinkTotal != null" >
        signing_authorize_link_total = #{signingAuthorizeLinkTotal,jdbcType=VARCHAR},
      </if>
      <if test="outerSigningAuthorizeLinkTotal != null" >
        outer_signing_authorize_link_total = #{outerSigningAuthorizeLinkTotal,jdbcType=VARCHAR},
      </if>
      <if test="customerManagerId != null" >
        customer_manager_id = #{customerManagerId,jdbcType=VARCHAR},
      </if>
      <if test="yuntuOrderNo != null" >
        yuntu_order_no = #{yuntuOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="isInuse != null" >
        is_inuse = #{isInuse,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoong.dist.api.domain.a1902_biz.CustomerCreditExt" >
    update customer_credit_ext
    set credit_id = #{creditId,jdbcType=BIGINT},
      last_credit_id = #{lastCreditId,jdbcType=BIGINT},
      external_serial_no = #{externalSerialNo,jdbcType=VARCHAR},
      expect_loan_amount = #{expectLoanAmount,jdbcType=DECIMAL},
      expect_extra_loan_amount = #{expectExtraLoanAmount,jdbcType=DECIMAL},
      expect_car_trans_amount = #{expectCarTransAmount,jdbcType=DECIMAL},
      expect_loan_term = #{expectLoanTerm,jdbcType=VARCHAR},
      loan_purpose = #{loanPurpose,jdbcType=VARCHAR},
      pre_check_bank_card = #{preCheckBankCard,jdbcType=INTEGER},
      auth_result = #{authResult,jdbcType=INTEGER},
      sign_result = #{signResult,jdbcType=INTEGER},
      outer_sign_result = #{outerSignResult,jdbcType=INTEGER},
      sign_finish_time = #{signFinishTime,jdbcType=TIMESTAMP},
      fund_org_business_status = #{fundOrgBusinessStatus,jdbcType=INTEGER},
      ocr_status = #{ocrStatus,jdbcType=INTEGER},
      real_auth_status = #{realAuthStatus,jdbcType=INTEGER},
      credit_result = #{creditResult,jdbcType=INTEGER},
      credit_remark = #{creditRemark,jdbcType=VARCHAR},
      credit_status = #{creditStatus,jdbcType=INTEGER},
      flow_type = #{flowType,jdbcType=VARCHAR},
      flow_node_key = #{flowNodeKey,jdbcType=VARCHAR},
      flow_node_index = #{flowNodeIndex,jdbcType=INTEGER},
      flow_node_name = #{flowNodeName,jdbcType=VARCHAR},
      flow_create_time = #{flowCreateTime,jdbcType=TIMESTAMP},
      credit_launch_time = #{creditLaunchTime,jdbcType=TIMESTAMP},
      credit_inter_time = #{creditInterTime,jdbcType=TIMESTAMP},
      credit_customer_sign_launch_time = #{creditCustomerSignLaunchTime,jdbcType=TIMESTAMP},
      credit_customer_sign_finish_time = #{creditCustomerSignFinishTime,jdbcType=TIMESTAMP},
      flow_finish_time = #{flowFinishTime,jdbcType=TIMESTAMP},
      effective_expire_time = #{effectiveExpireTime,jdbcType=TIMESTAMP},
      signing_authorize_link_total = #{signingAuthorizeLinkTotal,jdbcType=VARCHAR},
      outer_signing_authorize_link_total = #{outerSigningAuthorizeLinkTotal,jdbcType=VARCHAR},
      customer_manager_id = #{customerManagerId,jdbcType=VARCHAR},
      yuntu_order_no = #{yuntuOrderNo,jdbcType=VARCHAR},
      is_inuse = #{isInuse,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>