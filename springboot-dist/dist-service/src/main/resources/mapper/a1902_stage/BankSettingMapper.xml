<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yoong.dist.service.core.mapper.a1902_stage.BankSettingMapper" >
  <resultMap id="BaseResultMap" type="com.yoong.dist.api.domain.a1902_stage.BankSetting" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="bank_id" property="bankId" jdbcType="VARCHAR" />
    <result column="agency_code" property="agencyCode" jdbcType="VARCHAR" />
    <result column="assurer_no" property="assurerNo" jdbcType="VARCHAR" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="bank_type" property="bankType" jdbcType="VARCHAR" />
    <result column="credit_receive_amount" property="creditReceiveAmount" jdbcType="INTEGER" />
    <result column="marketing_archives_num" property="marketingArchivesNum" jdbcType="VARCHAR" />
    <result column="org_type" property="orgType" jdbcType="INTEGER" />
    <result column="plat_no" property="platNo" jdbcType="VARCHAR" />
    <result column="product_type" property="productType" jdbcType="INTEGER" />
    <result column="bank_service_fee" property="bankServiceFee" jdbcType="DECIMAL" />
    <result column="is_cocom" property="isCocom" jdbcType="INTEGER" />
    <result column="cocom_id" property="cocomId" jdbcType="VARCHAR" />
    <result column="is_invoke" property="isInvoke" jdbcType="INTEGER" />
    <result column="reczoneno" property="reczoneno" jdbcType="VARCHAR" />
    <result column="guarantee_code" property="guaranteeCode" jdbcType="VARCHAR" />
    <result column="market_id" property="marketId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_date, modify_date, version, bank_id, agency_code, assurer_no, bank_code, 
    bank_name, bank_type, credit_receive_amount, marketing_archives_num, org_type, plat_no, 
    product_type, bank_service_fee, is_cocom, cocom_id, is_invoke, reczoneno, guarantee_code, 
    market_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yoong.dist.api.domain.a1902_stage.BankSettingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_setting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bank_setting
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bank_setting
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoong.dist.api.domain.a1902_stage.BankSettingExample" >
    delete from bank_setting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yoong.dist.api.domain.a1902_stage.BankSetting" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bank_setting (create_date, modify_date, version, 
      bank_id, agency_code, assurer_no, 
      bank_code, bank_name, bank_type, 
      credit_receive_amount, marketing_archives_num, 
      org_type, plat_no, product_type, 
      bank_service_fee, is_cocom, cocom_id, 
      is_invoke, reczoneno, guarantee_code, 
      market_id)
    values (#{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}, 
      #{bankId,jdbcType=VARCHAR}, #{agencyCode,jdbcType=VARCHAR}, #{assurerNo,jdbcType=VARCHAR}, 
      #{bankCode,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{bankType,jdbcType=VARCHAR}, 
      #{creditReceiveAmount,jdbcType=INTEGER}, #{marketingArchivesNum,jdbcType=VARCHAR}, 
      #{orgType,jdbcType=INTEGER}, #{platNo,jdbcType=VARCHAR}, #{productType,jdbcType=INTEGER}, 
      #{bankServiceFee,jdbcType=DECIMAL}, #{isCocom,jdbcType=INTEGER}, #{cocomId,jdbcType=VARCHAR}, 
      #{isInvoke,jdbcType=INTEGER}, #{reczoneno,jdbcType=VARCHAR}, #{guaranteeCode,jdbcType=VARCHAR}, 
      #{marketId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yoong.dist.api.domain.a1902_stage.BankSetting" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bank_setting
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="agencyCode != null" >
        agency_code,
      </if>
      <if test="assurerNo != null" >
        assurer_no,
      </if>
      <if test="bankCode != null" >
        bank_code,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="bankType != null" >
        bank_type,
      </if>
      <if test="creditReceiveAmount != null" >
        credit_receive_amount,
      </if>
      <if test="marketingArchivesNum != null" >
        marketing_archives_num,
      </if>
      <if test="orgType != null" >
        org_type,
      </if>
      <if test="platNo != null" >
        plat_no,
      </if>
      <if test="productType != null" >
        product_type,
      </if>
      <if test="bankServiceFee != null" >
        bank_service_fee,
      </if>
      <if test="isCocom != null" >
        is_cocom,
      </if>
      <if test="cocomId != null" >
        cocom_id,
      </if>
      <if test="isInvoke != null" >
        is_invoke,
      </if>
      <if test="reczoneno != null" >
        reczoneno,
      </if>
      <if test="guaranteeCode != null" >
        guarantee_code,
      </if>
      <if test="marketId != null" >
        market_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="bankId != null" >
        #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="agencyCode != null" >
        #{agencyCode,jdbcType=VARCHAR},
      </if>
      <if test="assurerNo != null" >
        #{assurerNo,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null" >
        #{bankType,jdbcType=VARCHAR},
      </if>
      <if test="creditReceiveAmount != null" >
        #{creditReceiveAmount,jdbcType=INTEGER},
      </if>
      <if test="marketingArchivesNum != null" >
        #{marketingArchivesNum,jdbcType=VARCHAR},
      </if>
      <if test="orgType != null" >
        #{orgType,jdbcType=INTEGER},
      </if>
      <if test="platNo != null" >
        #{platNo,jdbcType=VARCHAR},
      </if>
      <if test="productType != null" >
        #{productType,jdbcType=INTEGER},
      </if>
      <if test="bankServiceFee != null" >
        #{bankServiceFee,jdbcType=DECIMAL},
      </if>
      <if test="isCocom != null" >
        #{isCocom,jdbcType=INTEGER},
      </if>
      <if test="cocomId != null" >
        #{cocomId,jdbcType=VARCHAR},
      </if>
      <if test="isInvoke != null" >
        #{isInvoke,jdbcType=INTEGER},
      </if>
      <if test="reczoneno != null" >
        #{reczoneno,jdbcType=VARCHAR},
      </if>
      <if test="guaranteeCode != null" >
        #{guaranteeCode,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        #{marketId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yoong.dist.api.domain.a1902_stage.BankSettingExample" resultType="java.lang.Integer" >
    select count(*) from bank_setting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bank_setting
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.bankId != null" >
        bank_id = #{record.bankId,jdbcType=VARCHAR},
      </if>
      <if test="record.agencyCode != null" >
        agency_code = #{record.agencyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.assurerNo != null" >
        assurer_no = #{record.assurerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null" >
        bank_code = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankType != null" >
        bank_type = #{record.bankType,jdbcType=VARCHAR},
      </if>
      <if test="record.creditReceiveAmount != null" >
        credit_receive_amount = #{record.creditReceiveAmount,jdbcType=INTEGER},
      </if>
      <if test="record.marketingArchivesNum != null" >
        marketing_archives_num = #{record.marketingArchivesNum,jdbcType=VARCHAR},
      </if>
      <if test="record.orgType != null" >
        org_type = #{record.orgType,jdbcType=INTEGER},
      </if>
      <if test="record.platNo != null" >
        plat_no = #{record.platNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productType != null" >
        product_type = #{record.productType,jdbcType=INTEGER},
      </if>
      <if test="record.bankServiceFee != null" >
        bank_service_fee = #{record.bankServiceFee,jdbcType=DECIMAL},
      </if>
      <if test="record.isCocom != null" >
        is_cocom = #{record.isCocom,jdbcType=INTEGER},
      </if>
      <if test="record.cocomId != null" >
        cocom_id = #{record.cocomId,jdbcType=VARCHAR},
      </if>
      <if test="record.isInvoke != null" >
        is_invoke = #{record.isInvoke,jdbcType=INTEGER},
      </if>
      <if test="record.reczoneno != null" >
        reczoneno = #{record.reczoneno,jdbcType=VARCHAR},
      </if>
      <if test="record.guaranteeCode != null" >
        guarantee_code = #{record.guaranteeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.marketId != null" >
        market_id = #{record.marketId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bank_setting
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      bank_id = #{record.bankId,jdbcType=VARCHAR},
      agency_code = #{record.agencyCode,jdbcType=VARCHAR},
      assurer_no = #{record.assurerNo,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_type = #{record.bankType,jdbcType=VARCHAR},
      credit_receive_amount = #{record.creditReceiveAmount,jdbcType=INTEGER},
      marketing_archives_num = #{record.marketingArchivesNum,jdbcType=VARCHAR},
      org_type = #{record.orgType,jdbcType=INTEGER},
      plat_no = #{record.platNo,jdbcType=VARCHAR},
      product_type = #{record.productType,jdbcType=INTEGER},
      bank_service_fee = #{record.bankServiceFee,jdbcType=DECIMAL},
      is_cocom = #{record.isCocom,jdbcType=INTEGER},
      cocom_id = #{record.cocomId,jdbcType=VARCHAR},
      is_invoke = #{record.isInvoke,jdbcType=INTEGER},
      reczoneno = #{record.reczoneno,jdbcType=VARCHAR},
      guarantee_code = #{record.guaranteeCode,jdbcType=VARCHAR},
      market_id = #{record.marketId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoong.dist.api.domain.a1902_stage.BankSetting" >
    update bank_setting
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="bankId != null" >
        bank_id = #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="agencyCode != null" >
        agency_code = #{agencyCode,jdbcType=VARCHAR},
      </if>
      <if test="assurerNo != null" >
        assurer_no = #{assurerNo,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null" >
        bank_type = #{bankType,jdbcType=VARCHAR},
      </if>
      <if test="creditReceiveAmount != null" >
        credit_receive_amount = #{creditReceiveAmount,jdbcType=INTEGER},
      </if>
      <if test="marketingArchivesNum != null" >
        marketing_archives_num = #{marketingArchivesNum,jdbcType=VARCHAR},
      </if>
      <if test="orgType != null" >
        org_type = #{orgType,jdbcType=INTEGER},
      </if>
      <if test="platNo != null" >
        plat_no = #{platNo,jdbcType=VARCHAR},
      </if>
      <if test="productType != null" >
        product_type = #{productType,jdbcType=INTEGER},
      </if>
      <if test="bankServiceFee != null" >
        bank_service_fee = #{bankServiceFee,jdbcType=DECIMAL},
      </if>
      <if test="isCocom != null" >
        is_cocom = #{isCocom,jdbcType=INTEGER},
      </if>
      <if test="cocomId != null" >
        cocom_id = #{cocomId,jdbcType=VARCHAR},
      </if>
      <if test="isInvoke != null" >
        is_invoke = #{isInvoke,jdbcType=INTEGER},
      </if>
      <if test="reczoneno != null" >
        reczoneno = #{reczoneno,jdbcType=VARCHAR},
      </if>
      <if test="guaranteeCode != null" >
        guarantee_code = #{guaranteeCode,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        market_id = #{marketId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoong.dist.api.domain.a1902_stage.BankSetting" >
    update bank_setting
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      bank_id = #{bankId,jdbcType=VARCHAR},
      agency_code = #{agencyCode,jdbcType=VARCHAR},
      assurer_no = #{assurerNo,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_type = #{bankType,jdbcType=VARCHAR},
      credit_receive_amount = #{creditReceiveAmount,jdbcType=INTEGER},
      marketing_archives_num = #{marketingArchivesNum,jdbcType=VARCHAR},
      org_type = #{orgType,jdbcType=INTEGER},
      plat_no = #{platNo,jdbcType=VARCHAR},
      product_type = #{productType,jdbcType=INTEGER},
      bank_service_fee = #{bankServiceFee,jdbcType=DECIMAL},
      is_cocom = #{isCocom,jdbcType=INTEGER},
      cocom_id = #{cocomId,jdbcType=VARCHAR},
      is_invoke = #{isInvoke,jdbcType=INTEGER},
      reczoneno = #{reczoneno,jdbcType=VARCHAR},
      guarantee_code = #{guaranteeCode,jdbcType=VARCHAR},
      market_id = #{marketId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>