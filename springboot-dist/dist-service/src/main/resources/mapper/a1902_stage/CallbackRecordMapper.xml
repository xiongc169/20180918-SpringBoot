<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yoong.dist.service.core.mapper.a1902_stage.CallbackRecordMapper" >
  <resultMap id="BaseResultMap" type="com.yoong.dist.api.domain.a1902_stage.CallbackRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="assurer_no" property="assurerNo" jdbcType="VARCHAR" />
    <result column="plat_no" property="platNo" jdbcType="VARCHAR" />
    <result column="bank_type" property="bankType" jdbcType="VARCHAR" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="busi_code" property="busiCode" jdbcType="VARCHAR" />
    <result column="trans_type" property="transType" jdbcType="INTEGER" />
    <result column="opinion" property="opinion" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yoong.dist.api.domain.a1902_stage.CallbackRecord" extends="BaseResultMap" >
    <result column="request" property="request" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_date, modify_date, version, order_no, assurer_no, plat_no, bank_type, 
    bank_code, busi_code, trans_type, opinion
  </sql>
  <sql id="Blob_Column_List" >
    request
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yoong.dist.api.domain.a1902_stage.CallbackRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from callback_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yoong.dist.api.domain.a1902_stage.CallbackRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from callback_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from callback_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from callback_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoong.dist.api.domain.a1902_stage.CallbackRecordExample" >
    delete from callback_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yoong.dist.api.domain.a1902_stage.CallbackRecord" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into callback_record (create_date, modify_date, version, 
      order_no, assurer_no, plat_no, 
      bank_type, bank_code, busi_code, 
      trans_type, opinion, request
      )
    values (#{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}, 
      #{orderNo,jdbcType=VARCHAR}, #{assurerNo,jdbcType=VARCHAR}, #{platNo,jdbcType=VARCHAR}, 
      #{bankType,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, #{busiCode,jdbcType=VARCHAR}, 
      #{transType,jdbcType=INTEGER}, #{opinion,jdbcType=VARCHAR}, #{request,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yoong.dist.api.domain.a1902_stage.CallbackRecord" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into callback_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="assurerNo != null" >
        assurer_no,
      </if>
      <if test="platNo != null" >
        plat_no,
      </if>
      <if test="bankType != null" >
        bank_type,
      </if>
      <if test="bankCode != null" >
        bank_code,
      </if>
      <if test="busiCode != null" >
        busi_code,
      </if>
      <if test="transType != null" >
        trans_type,
      </if>
      <if test="opinion != null" >
        opinion,
      </if>
      <if test="request != null" >
        request,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="assurerNo != null" >
        #{assurerNo,jdbcType=VARCHAR},
      </if>
      <if test="platNo != null" >
        #{platNo,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null" >
        #{bankType,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="busiCode != null" >
        #{busiCode,jdbcType=VARCHAR},
      </if>
      <if test="transType != null" >
        #{transType,jdbcType=INTEGER},
      </if>
      <if test="opinion != null" >
        #{opinion,jdbcType=VARCHAR},
      </if>
      <if test="request != null" >
        #{request,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yoong.dist.api.domain.a1902_stage.CallbackRecordExample" resultType="java.lang.Integer" >
    select count(*) from callback_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update callback_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.assurerNo != null" >
        assurer_no = #{record.assurerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.platNo != null" >
        plat_no = #{record.platNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankType != null" >
        bank_type = #{record.bankType,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null" >
        bank_code = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.busiCode != null" >
        busi_code = #{record.busiCode,jdbcType=VARCHAR},
      </if>
      <if test="record.transType != null" >
        trans_type = #{record.transType,jdbcType=INTEGER},
      </if>
      <if test="record.opinion != null" >
        opinion = #{record.opinion,jdbcType=VARCHAR},
      </if>
      <if test="record.request != null" >
        request = #{record.request,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update callback_record
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      assurer_no = #{record.assurerNo,jdbcType=VARCHAR},
      plat_no = #{record.platNo,jdbcType=VARCHAR},
      bank_type = #{record.bankType,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      busi_code = #{record.busiCode,jdbcType=VARCHAR},
      trans_type = #{record.transType,jdbcType=INTEGER},
      opinion = #{record.opinion,jdbcType=VARCHAR},
      request = #{record.request,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update callback_record
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      assurer_no = #{record.assurerNo,jdbcType=VARCHAR},
      plat_no = #{record.platNo,jdbcType=VARCHAR},
      bank_type = #{record.bankType,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      busi_code = #{record.busiCode,jdbcType=VARCHAR},
      trans_type = #{record.transType,jdbcType=INTEGER},
      opinion = #{record.opinion,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoong.dist.api.domain.a1902_stage.CallbackRecord" >
    update callback_record
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="assurerNo != null" >
        assurer_no = #{assurerNo,jdbcType=VARCHAR},
      </if>
      <if test="platNo != null" >
        plat_no = #{platNo,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null" >
        bank_type = #{bankType,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="busiCode != null" >
        busi_code = #{busiCode,jdbcType=VARCHAR},
      </if>
      <if test="transType != null" >
        trans_type = #{transType,jdbcType=INTEGER},
      </if>
      <if test="opinion != null" >
        opinion = #{opinion,jdbcType=VARCHAR},
      </if>
      <if test="request != null" >
        request = #{request,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yoong.dist.api.domain.a1902_stage.CallbackRecord" >
    update callback_record
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      assurer_no = #{assurerNo,jdbcType=VARCHAR},
      plat_no = #{platNo,jdbcType=VARCHAR},
      bank_type = #{bankType,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      busi_code = #{busiCode,jdbcType=VARCHAR},
      trans_type = #{transType,jdbcType=INTEGER},
      opinion = #{opinion,jdbcType=VARCHAR},
      request = #{request,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoong.dist.api.domain.a1902_stage.CallbackRecord" >
    update callback_record
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      assurer_no = #{assurerNo,jdbcType=VARCHAR},
      plat_no = #{platNo,jdbcType=VARCHAR},
      bank_type = #{bankType,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      busi_code = #{busiCode,jdbcType=VARCHAR},
      trans_type = #{transType,jdbcType=INTEGER},
      opinion = #{opinion,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>